This is Rainmap's TODO list. It contains a log of the features left to implement, as well as a historical account of what's been completed.

0.1ALPHA:
    - first major Rainmap release, to coincide with the GSoC term end
    - need new chrome for the downloadable version @done(2010-08-18)

Infrastructure:
	- SELinux policies for apache, postgresql, mod_wsgi
	- decide on the domain name to use for Insecure's version of Rainmap
	- SSL (extended validation certificate)

User Interface (HTML + CSS):
	- "new/edit" scan form
		- allow for target file upload
		- validate target for known-good input @done(2010-08-11)
		- two save buttons
		- redirect to "view scan" and provide cost, schedule, run options
		- add port boxes to SYN and ACK
		- verbosity: "regular, verbose, extra verbose"
		- most popular ports
			- 100 [rid of 'fast mode']
			- 1000 [default]
			- other opts based on credit system boundaries
		- radio buttons between 'topmost popular'/'range'
		- "run now" and "save" submission choices
	- view scan results
		- improve XSL output, especially colouring of open vs. closed ports
		- notify when scan is done via AJAX
		- ability to diff with a previous scan result
		- integrate results in existing chrome @done(2010-08-18)
		- full scan results emailed (with diff as requested)
			- email text version only if below certain size
	- settings on profile page
		- email options for:
			- completed/failed scans
			- scan output (text) if below certain threshold

Administrative Interface:
	- admin dashboard / overview (system info, statistics) @done(2010-08-18)
	- user account CRUD @done(2010-08-18)
	- user classes (create, add users) @drop @done(2010-08-18)
	- generate/view usage reports (scan types and options)
	- edit blacklists to prevent scans of certain sites/ranges @done(2010-08-18)
	- view abuse notices
	- display more information for various elements, i.e. the scan listing should display who owns them etc

Scan Execution:
	Worker processes:
		- message types:
			- 'settings-update' updates blacklist and global options
			- 'purge_data' deletes scan assets when the scan profile is removed @done(2010-08-18)
		- update local scan-specific settings (i.e. blacklists) [try to keep in-memory, not on disk]
	- scheduling
		- cancellations happen at DB level
		- schedule using a celerybeat task every 15 minutes

Scaling:
	- storage details @done(2010-08-18)
	- backend setup details @done(2010-08-18)
	- Fabric scripts for automated deployment?

Future:
	- allow non-registered users to perform scans of their own computer, Ã  la http://nmap-online.com
	- IPv6 scanning
		- obtain v6 IP
		- dynamically figure out if any IPv6 addresses have been specified and enable the options
	- credit refund system
		- automate parsing of results to see what we should refund
		- make sure admin interface allows to refund
Archive:
	- pick a name! Rainmap? Ncloud? @done(2010-05-06) @project(Infrastructure)
	- Install Cent OS 5 64bit with SELinux in VMware @wait for 5.5 @done(2010-05-24) @project(Infrastructure)
	- apache @done(2010-05-24) @project(Infrastructure)
	- postgresql @done(2010-05-24) @project(Infrastructure)
	- decide between Phusion Passenger WSGI, FastCGI, mod_python or mod_wsgi for running Django @done(2010-05-13) @project(Infrastructure)
	- mod_wsgi @done(2010-05-24) @project(Infrastructure)
	- publish INSTALL doc @done(2010-06-30) @project(Infrastructure)
	- publish DESIGN doc @done(2010-06-30) @project(Infrastructure)
	Database Schema: @done(2010-06-18) @project(Database Schema)
		- accounts @done(2010-06-02)
			- user classes @done(2010-06-02)
			- rainmap admin @done(2010-06-09)
		- scanning privileges (user classes are built based on these) @done(2010-05-28)
		- scans @done(2010-06-18)
			- figure out the credits system @done(2010-06-02)
			- scheduling of scans @done(2010-06-18)
				- investigate schedule/messaging options @done(2010-06-18)
			- repeated scans @done(2010-06-18)
			- results / efficiency of storing XML @done(2010-06-02)
				- xml datatype in PSQL @done(2010-06-02)
				- store as compressed text for performance? @done(2010-06-02)
				- perf hit high enough to warrant new table, or store in same place? @done(2010-06-02)
	
	- flow diagram to show how users go through the system @done(2010-05-24) @project(User Interface (HTML + CSS))
	- mockups of relevant pages @done(2010-05-24) @project(User Interface (HTML + CSS))
	- integrate insecure.org chrome @done(2010-06-18) @project(User Interface (HTML + CSS))
	- sign up page @done(2010-06-21) @project(User Interface (HTML + CSS))
	- login page @done(2010-06-21) @project(User Interface (HTML + CSS))
	- dashboard view @done(2010-08-04) @project(User Interface (HTML + CSS))
	- scan listing @done(2010-07-07) @project(User Interface (HTML + CSS))
	- more descriptive target help text, inline @done @project(User Interface (HTML + CSS))
	- simplify the scan form, [simple/advanced modes] @done(2010-07-26) @project(User Interface (HTML + CSS))
	default (simple) search options for new scans: @done(2010-07-26) @project(User Interface (HTML + CSS) / default (simple) search options for new scans)
		- Nmap's normal host discovery @done(2010-07-26)
		- TCP port scan (default ports)  @done(2010-07-26)
		- Version detection @done(2010-07-26)
		- OS detection @done(2010-07-26)
		- NSE @done(2010-07-26)
		- timing [-T4 default] @done(2010-07-26)
	- fix capitalization on list items @done(2010-07-26) @project(User Interface (HTML + CSS))
	- make top level menu "extras" with @done(2010-07-26) @project(User Interface (HTML + CSS))
		- traceroute @done(2010-07-26)
		- scan speed @done(2010-07-26)
		- verbosity @done(2010-07-26)
	- each option should have a link that opens the advanced options @done @project(User Interface (HTML + CSS))
	- links to open the various advanced sections @done @project(User Interface (HTML + CSS))
	- "scan list" page @done(2010-07-26) @project(User Interface (HTML + CSS))
		- display scans by last run date on 'dashboard' @done(2010-07-26)
		- each scan can be run multiple times @done(2010-07-26)
			- store run date and location of output @done(2010-07-26)
			- show all runs for a given scan @done(2010-07-26)
	- proper 404 / 500 error pages, with descriptive errors @done(2010-07-21) @project(User Interface (HTML + CSS))
	- reuse and integrate/reuse insecdb.css as much as possible @done @project(User Interface (HTML + CSS))
	- view results online @done(2010-07-26) @project(User Interface (HTML + CSS))
	- RabbitMQ configuration @done(2010-07-21) @project(Scan Execution)
		- finish "local cluster"-mode configuration @done(2010-07-19)
		- automate `rabbitmq` service start on reboot @done(2010-07-20)
	- make rainworq consume messages @done(2010-07-20) @project(Scan Execution / Worker processes)
	- 'nmap-args' runs a scan with the spec'd arguments @done(2010-07-21) @project(Scan Execution / Worker processes)
	- wrap the Nmap process and execute 'nmap-args' messages @done(2010-07-19) @project(Scan Execution / Worker processes)
	- figure out more about sending responses once a scan is complete @done(2010-07-19) @project(Scan Execution / Worker processes)
	- django / celery integration @done(2010-07-19) @project(Scan Execution)
		- add UI option to "run scan" @done(2010-07-19)
	- too many drawbacks to doing it with RMQ @drop @done(2010-07-19) @project(Scan Execution)
	- cronjob every 15 minutes picks off scheduled task @drop @done(2010-07-19) @project(Scan Execution)
	Deployment: @done(2010-07-07) @project(Deployment)
		- research appropriate linode hosting options @done(2010-06-18)
		- linode account setup for hosted version @done(2010-07-07)
		- deployment documentation @done(2010-07-07)
	Scan Limits: @done(2010-06-02) @project(Scan Limits)
		- default limits for new free account @done(2010-06-02)
			- 1024 ping scans per day @done(2010-06-02)
			- 32 "full scans" (means up to a port scan with basically the -A features) @done(2010-06-02)
		- no arbitrary NSE, only explicitly-permitted options @done(2010-06-02)
		- offer way to expand limits @done(2010-06-02)
			- site admin will change user classes for now @done(2010-06-02)
	Scan Setup Page: @done(2010-06-02) @project(Scan Setup Page)
		- scan options to offer (preliminary) @done(2010-06-02)
			- ping scan @done(2010-06-02)
			- TCP / UDP scan @done(2010-06-02)
			- ports to scan @done(2010-06-02)
			- version detection	 @done(2010-06-02)
			- os detection	@done(2010-06-02)
			- NSE @done(2010-06-02)
			- traceroute @done(2010-06-02)
		
	
	
	Auth/Login Module: @done(2010-06-09) @project(Auth/Login Module)
		- signup functionality @done(2010-06-09)
		- new users must activate their accounts via an email they'll receive @done(2010-06-09)
		- automatically assign to the default user class @done(2010-06-09)
	
